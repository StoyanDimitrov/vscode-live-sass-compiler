name: Publish CI

on:
# ONLY CARE ABOUT RELEASES - AS TESTS ARE FAILING
#  pull_request:
#    branches: [ master ]
  release:
    types:
    - published

  # ALLOW MANUAL RUNS
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
#       AGAIN ONLY THE RELEASE
#        os: [macos-latest, ubuntu-latest, windows-latest]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - id: Info
      uses: actions/github-script@0.9.0
      with:
        script: |
          console.log('Github Info', { ref: github.ref, event: github.event  })
      
    - name: Install Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
        
    - name: Install the package dependencies
      run: npm install
        
    - name: Install vsce
      run: npm i vsce -g
    
#   TESTS ARE FAILING - DOING MORE RESEARCH
#    - run: xvfb-run -a npm test
#      if: runner.os == 'Linux'
#      name: Test extension
      
#    - run: npm test
#      if: runner.os != 'Linux'
#      name: Test extension

    - id: get-name
      if: success() && startsWith( github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest'
      uses: actions/github-script@0.9.0
      with:
        script: |
          const ver = github.event.release.tag_name.substr(1)
          core.setOutput('name', `live-sass-${ver}.vsix`)

    - name: Package
      run: vsce package --yarn

    - name: Publish - vsce
      if: success() && startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest'
      run: vsce publish ${{ steps.get-name.outputs.name }} --yarn
      env:
        VSCE_PAT: ${{ secrets.VSCE_PAT }}
        
    - name: Install ovsx
      run: npm i ovsx -g
      
    - name: Publish - ovsx
      if: success() && startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest'
      run: ovsx publish ${{ steps.get-name.outputs.name }}
      env:
        OVSX_PAT: ${{ secrets.OVSX_PAT }}
        
    - name: Upload asset
      if: startsWith(github.ref, 'refs/tags/') && matrix.os == 'ubuntu-latest'
      uses: softprops/action-gh-release@v0.1.5
      with:
        files: ${{ steps.get-name.outputs.name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
